source('~/Desktop/Machine Learning A-Z/Part 1 - Data Preprocessing/data_preprocessing_template.R')
View(training_set)
?ave
# set working directory
setwd('/users/chatterjee/Desktop/Machine Learning A-Z/Part 1 - Data Preprocessing')
# Importing the dataset
dataset = read.csv('Data.csv')
View(dataset)
mean(dataset$Salary)
mean(dataset$Salary, na.rm = TRUE)
# Taking care of the missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
View(dataset)
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Country
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes', 'No'),
labels = c(0, 1))
dataset$Purchased
?sample
library(caTools)
set.seed(123)
# Split the data into training set and test set
# Here dataset$Purchased is the dependent variable
# SplitRatio = the percentage you want to be the training set
split <- sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
training_set = scale(training_set)
test_set = scale(test_set)
class(training_set)
typeof(training_set)
training_set[]
training_set[2]
training_set[2:3]
training_set[2:3] = scale(training_set[2:3])
test_set[2:3] = scale(test_set[2:3])
View(test_set)
setwd("~/Desktop/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression")
dataset = read.csv('Salary_Data.csv')
dataset = read.csv('Salary_Data.csv')
View(dataset)
source('~/Desktop/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/simple_linear_regression.R')
View(training_set)
View(test_set)
?quote
quote(x * 10)
class(quote(x * 10))
typeof(quote(x*10))
regression = lm(formula = Salary ~ YearsExperience,
training_set)
regressor = lm(formula = Salary ~ YearsExperience,
training_set)
summary(regressor)
?predict
y_pred = predict(regressor, newdata = test_set)
y_pred
install.packages('ggplot2')
library(ggplot2)
install.packages(c("foreign", "survival"))
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle("Salary vs. Experience (Training Set)") +
xlab("Years of Experience") +
ylab("Salary")
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle("Salary vs. Experience (Test Set)") +
xlab("Years of Experience") +
ylab("Salary")
